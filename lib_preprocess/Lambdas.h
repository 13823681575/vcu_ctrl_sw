/******************************************************************************
*
* Copyright (C) 2017 Allegro DVT2.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX OR ALLEGRO DVT2 BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of  Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
*
* Except as contained in this notice, the name of Allegro DVT2 shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Allegro DVT2.
*
******************************************************************************/

/****************************************************************************
   -----------------------------------------------------------------------------
****************************************************************************/
#pragma once

#include "lib_rtos/types.h"
#define LDA_TABLE_SIZE 208
typedef uint8_t TLambdasTable[LDA_TABLE_SIZE];

static const TLambdasTable CUSTOM_LDA_TABLE =
{
  0x29, 0xD6, 0x54, 0xE5, 0x3E, 0x65, 0xC1, 0x47, 0x7B, 0x45, 0xCB, 0xE8, 0x28,
  0x86, 0x8B, 0xAC, 0xD1, 0xB8, 0x32, 0x11, 0xA9, 0x81, 0xAD, 0xE6, 0xE1, 0xDA,
  0x3C, 0x73, 0xFF, 0xC2, 0x50, 0xF9, 0x50, 0x4B, 0x80, 0xF8, 0xB9, 0x6F, 0x48,
  0x66, 0xFE, 0xC2, 0xC6, 0xF3, 0xEA, 0x96, 0x71, 0xF1, 0xC7, 0x46, 0x9E, 0xE1,
  0xFC, 0x76, 0xA6, 0x01, 0xFC, 0xF4, 0xD4, 0x58, 0x0C, 0x1F, 0xD1, 0x01, 0xCC,
  0xB5, 0x75, 0xC7, 0x3B, 0x3C, 0x4D, 0x03, 0xEE, 0xFB, 0x7B, 0xFA, 0xA7, 0x7F,
  0x9A, 0x95, 0xB0, 0x39, 0xFA, 0xED, 0x26, 0xA9, 0x83, 0x59, 0xF2, 0x53, 0xED,
  0xC7, 0x41, 0x17, 0x96, 0xB8, 0xD0, 0xD8, 0x8D, 0xE7, 0xF4, 0x18, 0xD5, 0x00,
  0x8E, 0x88, 0x7C, 0xA9, 0x18, 0x51, 0x70, 0x81, 0x25, 0xB2, 0x43, 0x6B, 0x6A,
  0xFF, 0x0F, 0xCC, 0x14, 0x79, 0xF9, 0x09, 0xF5, 0x4B, 0x41, 0x95, 0xED, 0xE2,
  0x06, 0x48, 0x2F, 0x73, 0x5B, 0x96, 0x1D, 0xB2, 0xFC, 0x25, 0x3F, 0x9E, 0xC3,
  0x73, 0x18, 0xA5, 0x29, 0x5B, 0xEC, 0xEC, 0xDE, 0x34, 0x8E, 0x0F, 0xD9, 0x26,
  0x06, 0xE1, 0x52, 0xFA, 0xDE, 0x98, 0x29, 0x06, 0x2C, 0xD0, 0xD8, 0xBD, 0x87,
  0x61, 0x8D, 0xD8, 0xAF, 0x19, 0x26, 0xB2, 0x38, 0x8D, 0x34, 0x02, 0x57, 0x45,
  0x49, 0xF3, 0x1C, 0x4D, 0x4A, 0x6B, 0xE8, 0xD2, 0x99, 0x00, 0xB3, 0xFB, 0xC2,
  0x13, 0x52, 0x11, 0x2C, 0x5A, 0x6C, 0xC0, 0xCB, 0x97, 0x78, 0xEE, 0x86, 0x1E,
};

static const TLambdasTable DEFAULT_LDA_TABLE =
{
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02,
  0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
  0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07,
  0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x09, 0x0A, 0x0A,
  0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x0D, 0x0D, 0x0D, 0x0D, 0x0E, 0x0E, 0x0E,
  0x0E, 0x10, 0x10, 0x10, 0x10, 0x12, 0x12, 0x12, 0x12, 0x14, 0x14, 0x14, 0x14,
  0x17, 0x17, 0x17, 0x17, 0x19, 0x19, 0x19, 0x19, 0x1D, 0x1D, 0x1D, 0x1D, 0x20,
  0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x28, 0x28, 0x28, 0x28, 0x2D, 0x2D,
  0x2D, 0x2D, 0x33, 0x33, 0x33, 0x33, 0x39, 0x39, 0x39, 0x39, 0x40, 0x40, 0x40,
  0x40, 0x48, 0x48, 0x48, 0x48, 0x51, 0x51, 0x51, 0x51, 0x5B, 0x5B, 0x5B, 0x5B,
};

static const TLambdasTable AVC_DEFAULT_LDA_TABLE =
{
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x02, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
  0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x04,
  0x03, 0x02, 0x03, 0x04, 0x03, 0x03, 0x03, 0x04, 0x04, 0x03, 0x03, 0x04,
  0x04, 0x03, 0x03, 0x04, 0x04, 0x03, 0x04, 0x04, 0x05, 0x04, 0x04, 0x08,
  0x06, 0x04, 0x05, 0x08, 0x06, 0x05, 0x05, 0x08, 0x07, 0x05, 0x06, 0x08,
  0x08, 0x06, 0x06, 0x08, 0x09, 0x06, 0x07, 0x10, 0x0A, 0x07, 0x08, 0x10,
  0x0B, 0x08, 0x09, 0x10, 0x0D, 0x09, 0x0A, 0x10, 0x0E, 0x0A, 0x0B, 0x10,
  0x10, 0x0B, 0x0C, 0x10, 0x12, 0x0D, 0x0E, 0x20, 0x14, 0x0E, 0x0F, 0x20,
  0x17, 0x0F, 0x11, 0x20, 0x19, 0x11, 0x13, 0x20, 0x1D, 0x13, 0x15, 0x20,
  0x20, 0x15, 0x18, 0x20, 0x24, 0x18, 0x1B, 0x40, 0x28, 0x1B, 0x1E, 0x40,
  0x2D, 0x1E, 0x22, 0x40, 0x33, 0x21, 0x26, 0x40, 0x39, 0x25, 0x2A, 0x40,
  0x40, 0x2A, 0x30, 0x40, 0x48, 0x2F, 0x35, 0x80, 0x51, 0x35, 0x3C, 0x80,
  0x5B, 0x3B, 0x43, 0x80,
};

static const TLambdasTable HEVC_DEFAULT_LDA_TABLE =
{
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01,
  0x02, 0x01, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01,
  0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02,
  0x03, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x04,
  0x04, 0x02, 0x03, 0x04, 0x04, 0x03, 0x03, 0x04, 0x05, 0x03, 0x03, 0x04,
  0x05, 0x03, 0x03, 0x04, 0x06, 0x03, 0x04, 0x04, 0x07, 0x04, 0x04, 0x08,
  0x08, 0x04, 0x05, 0x08, 0x09, 0x05, 0x05, 0x08, 0x0A, 0x05, 0x06, 0x08,
  0x0C, 0x06, 0x06, 0x08, 0x0C, 0x06, 0x07, 0x10, 0x10, 0x07, 0x08, 0x10,
  0x12, 0x08, 0x09, 0x10, 0x15, 0x09, 0x0A, 0x10, 0x18, 0x0A, 0x0B, 0x10,
  0x1B, 0x0B, 0x0C, 0x10, 0x1E, 0x0C, 0x0E, 0x20, 0x22, 0x0E, 0x0F, 0x20,
  0x26, 0x0F, 0x11, 0x20, 0x2A, 0x11, 0x13, 0x20, 0x30, 0x13, 0x15, 0x20,
  0x35, 0x15, 0x18, 0x20, 0x3C, 0x18, 0x1B, 0x40, 0x43, 0x1B, 0x1E, 0x40,
  0x4B, 0x1E, 0x22, 0x40, 0x54, 0x21, 0x26, 0x40, 0x5F, 0x25, 0x2A, 0x40,
  0x6A, 0x2A, 0x30, 0x40, 0x77, 0x2F, 0x35, 0x80, 0x85, 0x35, 0x3C, 0x80,
  0x96, 0x3B, 0x43, 0x80,
};

static const TLambdasTable VP9_DEFAULT_LDA_TABLE =
{
  0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01,
  0x01, 0x02, 0x02, 0x01,
  0x01, 0x02, 0x02, 0x01,
  0x01, 0x02, 0x02, 0x01,
  0x01, 0x02, 0x02, 0x01,
  0x01, 0x02, 0x02, 0x02,
  0x01, 0x03, 0x03, 0x02, // qp10
  0x02, 0x03, 0x03, 0x02,
  0x02, 0x03, 0x03, 0x02,
  0x02, 0x03, 0x03, 0x02,
  0x02, 0x03, 0x03, 0x02,
  0x02, 0x03, 0x03, 0x02,
  0x02, 0x04, 0x04, 0x02,
  0x03, 0x04, 0x04, 0x02,
  0x03, 0x04, 0x04, 0x02,
  0x03, 0x04, 0x04, 0x02,
  0x03, 0x05, 0x05, 0x04, // qp20
  0x04, 0x05, 0x05, 0x04,
  0x04, 0x05, 0x05, 0x04,
  0x05, 0x06, 0x06, 0x04,
  0x05, 0x06, 0x06, 0x04,
  0x06, 0x06, 0x06, 0x04,
  0x07, 0x07, 0x07, 0x04,
  0x08, 0x08, 0x08, 0x04,
  0x09, 0x08, 0x08, 0x08,
  0x0A, 0x09, 0x09, 0x08,
  0x0C, 0x0A, 0x0A, 0x08, // qp30
  0x0E, 0x0B, 0x0B, 0x08,
  0x10, 0x0B, 0x0B, 0x08,
  0x12, 0x0C, 0x0C, 0x08,
  0x15, 0x0E, 0x0E, 0x08,
  0x18, 0x0F, 0x0F, 0x10,
  0x1B, 0x11, 0x11, 0x10,
  0x1E, 0x12, 0x12, 0x10,
  0x22, 0x14, 0x14, 0x10,
  0x26, 0x15, 0x15, 0x10,
  0x2A, 0x18, 0x18, 0x10, // qp40
  0x30, 0x1B, 0x1B, 0x10,
  0x35, 0x1C, 0x1C, 0x20,
  0x3C, 0x1F, 0x1F, 0x20,
  0x43, 0x23, 0x23, 0x20,
  0x4B, 0x26, 0x26, 0x20,
  0x54, 0x2A, 0x2A, 0x20,
  0x5F, 0x30, 0x30, 0x20,
  0x6A, 0x32, 0x32, 0x20,
  0x77, 0x36, 0x35, 0x40,
  0x85, 0x3C, 0x3C, 0x40, // qp50
  0x96, 0x43, 0x43, 0x40,
};

